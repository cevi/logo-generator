// Color Box
//
// More examples on this <a href="https://codepen.io/btemperli/pen/EQwLYG" target="_blank">codepen-snippet</a>.
//
// Markup:
// <div class="color-box -leftarrow">
//  <div class="left">Left side is red.<br>-leftarrow</div>
//  <div class="right">Right side is blue.</div>
// </div>
// <div class="color-box -switchsize -rightarrow">
//  <div class="left">Left side is red.<br>-switchsize<br>-rightarrow</div>
//  <div class="right">Right side is blue.</div>
// </div>
// <div class="color-box -switchcolor -leftarrow">
//  <div class="left">Left side is blue.<br>-switchcolor<br>-leftarrow</div>
//  <div class="right">Right side is red.</div>
// </div>
// <div class="color-box -switchcolor -switchsize -leftarrow">
//  <div class="left">Left side is blue.<br>-switchcolor<br>-switchsize<br>-leftarrow</div>
//  <div class="right">Right side is red.</div>
// </div>
// <div class="color-box -switchcolor -switchsize -leftarrow">
//  <div class="left -image" style="background-image: url('http://via.placeholder.com/600x600/22cc99/7700dd')">
//      Left side is an image.
//      <br>-switchcolor
//      <br>-switchsize
//      <br>-rightarrow
//  </div>
//  <div class="right">Right side is red.</div>
// </div>
//
// Style guide: components.color-box

@use "../meta/variables";

$line-width: variables.$cevi-line-size / 2;
$triangle-big-width: 6.4; // 32/5
$triangle-big-height: 4.32; // 21.6/5
$triangle-small-width: 4.74; // 23.7/5
$triangle-small-height: 3.2; // 16/5
$background-size: auto 125vh;

.color-box {
    padding: 0;
    margin: variables.$cevi-line-size / 2 0;
    height: 280px;

    > .right,
    > .left {
        position: relative;
        color: variables.$color-background;
        padding: $line-width;
        height: 100%;
        float: left;

        a { // stylelint-disable-line rscss/no-descendant-combinator
            color: variables.$color-background;

            &:hover {
                color: variables.$color-background-hover;
            }
        }

        &.-image {
            background-color: unset;
            background-repeat: no-repeat;
            background-position: 50% 50%;
            background-size: cover;
        }

        &::after {
            position: absolute;
            content: "";
            height: 0;
            width: 0;
            top: 50%;
            transform: translateY(-50%);
        }
    }

    > .left {
        background-color: variables.$color-primary;
        width: calc(100% / 3);
        padding-right: $line-width * 2;
    }

    > .right {
        background-color: variables.$color-active;
        width: calc(100% / 3 * 2);

        &::before {
            position: absolute;
            content: "";
            height: 100%;
            width: $line-width;
            background-color: variables.$color-background;
            left: - $line-width;
            top: 0;
        }
    }

    &.-switchsize {
        > .left {
            width: calc(100% / 3 * 2);
        }

        > .right {
            width: calc(100% / 3);
        }
    }

    &.-leftarrow {
        // White big triangle
        > .right::after {
            border-right: ($line-width * $triangle-big-width) solid variables.$color-background;
            border-top: ($line-width * $triangle-big-height) solid transparent;
            border-bottom: ($line-width * $triangle-big-height) solid transparent;
            left: ($line-width * $triangle-big-width * -1);
            z-index: 1;
        }

        // Blue smaller triangle
        > .left::after {
            border-right: ($line-width * $triangle-small-width) solid variables.$color-active;
            border-top: ($line-width * $triangle-small-height) solid transparent;
            border-bottom: ($line-width * $triangle-small-height) solid transparent;
            right: 0;
            z-index: 2;
        }
    }

    &.-rightarrow {
        // Blue small triangle
        > .right::after {
            border-left: ($line-width * $triangle-small-width) solid variables.$color-primary;
            border-top: ($line-width * $triangle-small-height) solid transparent;
            border-bottom: ($line-width * $triangle-small-height) solid transparent;
            left: $line-width * -1;
            z-index: 2;
        }

        // White bigger triangle
        > .left::after {
            border-right: none;
            border-left: ($line-width * $triangle-big-width) solid variables.$color-background;
            border-top: ($line-width * $triangle-big-height) solid transparent;
            border-bottom: ($line-width * $triangle-big-height) solid transparent;
            right: ($line-width * $triangle-big-width * -1) + $line-width;
            z-index: 1;
        }
    }

    &.-changecolor {
        > .left,
        > .right {
            transition: background-color variables.$base-transition-speed linear;

            &::after {
                transition:
                    border-left-color variables.$base-transition-speed linear,
                    border-right-color variables.$base-transition-speed linear;
            }
        }

        &:hover {
            > .left {
                background-color: variables.$color-active;
            }

            > .right {
                background-color: variables.$color-primary;
            }
        }
    }

    // stylelint-disable no-descending-specificity
    &.-switchcolor {
        > .left {
            background-color: variables.$color-active;
        }

        > .right {
            background-color: variables.$color-primary;
        }

        &.-leftarrow {
            > .left::after {
                border-right-color: variables.$color-primary;
            }
        }

        &.-rightarrow {
            > .right::after {
                border-left-color: variables.$color-active;
            }
        }

        &.-changecolor:hover {
            > .left {
                background-color: variables.$color-primary;
            }

            &.-leftarrow {
                > .left::after {
                    border-right-color: variables.$color-active;
                }
            }

            > .right {
                background-color: variables.$color-active;

                &::after {
                    border-left-color: variables.$color-primary;
                }
            }

            &.-rightarrow {
                > .right::after {
                    border-left-color: variables.$color-primary;
                }
            }
        }
    }

    &.-slider {
        height: calc(100vh - #{variables.$base-header-height});
        padding: $line-width 0;

        > .right,
        > .left {
            background-color: variables.$color-active;

            &.-image {
                background-size: $background-size;
            }
        }

        > .right {
            &.-image {
                background-position: 0 50%;
            }
        }

        > .left {
            &.-image {
                background-position: (100% / 3 * 2) 50%;
            }

            > .leftarrowimage {
                width: $line-width * $triangle-small-width;
                height: $line-width * $triangle-small-height * 2;
                position: absolute;
                top: 50%;
                transform: translateY(-50%);
                right: - ($line-width * $triangle-small-width) + $line-width;
                z-index: 3;
            }
        }
    }
}
